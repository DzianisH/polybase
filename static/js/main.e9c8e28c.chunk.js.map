{"version":3,"sources":["store/db/initialState.js","components/Header.jsx","containers/Header.jsx","store/menu/types.js","store/menu/actions.js","components/MenuNode.jsx","containers/Menu.jsx","components/Sidebar.jsx","components/DefaultPanel.jsx","components/ShowGroupPanel.jsx","components/ShowDBPanel.jsx","store/db/types.js","components/NotFoundPane.jsx","containers/ShowNodePanel.jsx","store/db/actions.js","containers/Panel.jsx","components/Footer.jsx","App.js","serviceWorker.js","store/utils.js","store/db/reducer.js","store/menu/reducer.js","index.js"],"names":["module","exports","selectedNode","nodes","name","fullName","summary","dataModel","description","children","database","secondaryDataModel","cap","persistance","license","openSource","website","docs","partitionin","replication","consistency","transaction","features","props","className","onClick","gotoRoot","withRouter","history","useHistory","e","preventDefault","stopPropagation","push","EXPAND_CHILDREN","COLLAPSE_CHILDREN","expandChildren","id","type","types","payload","collapseChildren","MenuNode","this","shouldExpandChildren","node","shouldIExpand","onCollapseChildren","bind","onExpandChildren","map","i","hidden","key","isActive","createUrl","getStyles","renderSign","to","renderChilder","React","Component","Menu","action","dispatch","expand","includes","console","log","callAction","connect","state","db","menu","ShowGroupPanel","child","group","renderChildrenLinks","ShowDBPanel","style","display","href","target","rel","renderOpenSource","render2ndDataModel","join","color","renderTitileInfo","renderGenInfo","renderKeyFeats","NODE_SELECTED","ShowNodePanel","urlName","match","params","nodeName","dispatchIfRequired","NotFoundPane","path","component","DefaultPanel","App","Boolean","window","location","hostname","logState","newState","actionType","msg","undefined","initialState","require","populateIds","firstId","Object","freeze","readInitalState","selectNode","selector","findNode","createComparator","comparator","innerNode","concat","filter","eId","reducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e9c8e28c.chunk.js","sourcesContent":["module.exports = {\r\n    selectedNode: {},\r\n    nodes: [\r\n        {\r\n            name: 'RDBSM',\r\n            fullName: 'Relational databases',\r\n            summary: 'Relational DBMS usualy used when it requires ACID transactions and fluent query language.',\r\n            dataModel: 'relational',\r\n            description: 'descr for sql dbs',\r\n            children: [\r\n                {\r\n                    database: true,\r\n                    name: 'MySQL',\r\n                    summary: 'Widely used open source RDBMS',\r\n                    dataModel: 'Relational DBMS',\r\n                    secondaryDataModel: 'Document store',\r\n                    cap : 'AC',\r\n                    persistance: 'B-Tree',\r\n                    license: 'GPLv2/Proprietary',\r\n                    openSource: true,\r\n                    website: 'https://www.mysql.com/',\r\n                    docs: 'https://dev.mysql.com/doc/',\r\n                    partitionin: 'Horizontal/Sharding with cluster/Fabric',\r\n                    replication: 'Master-master/Master-slave',\r\n                    consistency: 'Immediate',\r\n                    transaction: 'ACID',\r\n                    features: ['Secondary index', 'Concurrency', 'Durability', 'In-memory storing avility', 'ACID', 'Immediate Consistency'],\r\n                    description: 'MySQL is free and open-source software under the terms of the GNU General Public License, and is also available under a variety of proprietary licenses. MySQL was owned and sponsored by the Swedish company MySQL AB, which was bought by Sun Microsystems (now Oracle Corporation). In 2010, when Oracle acquired Sun, Widenius forked the open-source MySQL project to create MariaDB.'\r\n                },\r\n                {\r\n                    database: true,\r\n                    name: 'Oracle',\r\n                    fullName: 'Oracle Database',\r\n                    summary: 'Widely used RDBMS',\r\n                    dataModel: 'Relational DBMS',\r\n                    secondaryDataModel: 'Document store/Graph DBMS/RDF store',\r\n                    cap: 'AC',\r\n                    persistance: 'B-Tree',\r\n                    license: 'Proprietary',\r\n                    website: 'https://www.oracle.com/database/',\r\n                    docs: 'https://docs.oracle.com/en/database/',\r\n                    partitionin: 'Horizontal',\r\n                    replication: 'Master-master/Master-slave',\r\n                    consistency: 'Immediate',\r\n                    transaction: 'ACID',\r\n                    features: ['Secondary index', 'Concurrency', 'Durability', 'In-memory storing avility', 'ACID', 'Immediate Consistency'],\r\n                    description: 'Oracle Database (commonly referred to as Oracle RDBMS or simply as Oracle) is a proprietary multi-model database management system produced and marketed by Oracle Corporation.'\r\n                },\r\n                {\r\n                    database: true,\r\n                    name: 'Postgre',\r\n                    fullName: 'PostgreSQL',\r\n                    summary: 'Widely used open source RDBMS',\r\n                    dataModel: 'Relational DBMS',\r\n                    secondaryDataModel: 'Document store',\r\n                    cap: 'AC',\r\n                    persistance: 'B-Tree',\r\n                    license: 'PostgreSQL',\r\n                    openSource: true,\r\n                    website: 'https://www.postgresql.org/',\r\n                    docs: 'https://www.postgresql.org/docs/manuals/',\r\n                    partitionin: 'By Range/Hash(v11+)/List',\r\n                    replication: 'Master-master/Master-slave',\r\n                    consistency: 'Immediate',\r\n                    transaction: 'ACID',\r\n                    features: ['Secondary index', 'Concurrency', 'Durability', 'ACID', 'Immediate Consistency'],\r\n                    description: 'PostgreSQL, also known as Postgres, is a free and open-source RDBMS emphasizing extensibility and technical standards compliance. It is designed to handle a range of workloads, from single machines to data warehouses or Web services with many concurrent users. It is the default database for macOS Server, and is also available for Linux, FreeBSD, OpenBSD, and Windows.'\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'Document',\r\n            fullName: 'Document oriented databases',\r\n            summary: 'docs summary',\r\n            dataModel: 'document',\r\n            description: 'descr for docs',\r\n            children: [\r\n                {\r\n                    database: true,\r\n                    name: 'Mongo',\r\n                    fullName: 'MongoDB',\r\n                    summary: 'One of the most popular document stores available both as a fully managed cloud service and for deployment on self-managed infrastructure',\r\n                    dataModel: 'Document store',\r\n                    secondaryDataModel: 'Search engine',\r\n                    cap: 'CP',\r\n                    persistance: '??',\r\n                    license: 'Various',\r\n                    openSource: true,\r\n                    website: 'https://www.mongodb.com/',\r\n                    docs: 'https://docs.mongodb.com/manual/',\r\n                    partitionin: 'Sharding',\r\n                    replication: 'Master-slave',\r\n                    consistency: 'Eventual/Immediate',\r\n                    transaction: 'Multi-document ACID with snapshot isolation',\r\n                    features: ['Secondary index', 'Concurrency', 'Durability', 'Map-Reduce', 'In-memory storing avility', 'Eventual & Immediate consistancy', 'ACID'],\r\n                    description: 'MongoDB is a cross-platform document-oriented database program. Classified as a NoSQL database program, MongoDB uses JSON-like documents with schema. MongoDB is developed by MongoDB Inc. and licensed under the Server Side Public License (SSPL).'\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            name: 'Column stores',\r\n            fullName: 'Wide column stores',\r\n            summary: 'column summary',\r\n            dataModel: 'Wide column store',\r\n            description: 'description for column',\r\n            children: [\r\n                {\r\n                    database: true,\r\n                    name: 'Cassandra',\r\n                    summary: 'Wide-column store based on ideas of BigTable and DynamoDB.',\r\n                    dataModel: 'Wide column store',\r\n                    cap: 'AP',\r\n                    persistance: '??log based??',\r\n                    license: 'Apache 2.0',\r\n                    openSource: true,\r\n                    website: 'http://cassandra.apache.org/',\r\n                    docs: 'https://docs.mongodb.com/manual/',\r\n                    partitionin: 'Sharding',\r\n                    replication: 'Selectable factor',\r\n                    consistency: 'Eventual/Immediate',\r\n                    transaction: 'Record lvl ACID',\r\n                    features: ['Concurrency', 'Durability', 'Map-Reduce'],\r\n                    description: 'Apache Cassandra is a free and open-source, distributed, wide column store, NoSQL database management system designed to handle large amounts of data across many commodity servers, providing high availability with no single point of failure. Cassandra offers robust support for clusters spanning multiple datacenters, with asynchronous masterless replication allowing low latency operations for all clients.'\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n};\r\n","import React from 'react';\r\nimport './Header.css'\r\n\r\nexport default (props) => (\r\n  <header className='Header display-flex' onClick={props.gotoRoot}>\r\n    <h1>Polybase</h1>\r\n    <p className='Header-excuse'>Sorry, UX sucks on mobile devices, but I already working on it =)</p>\r\n  </header>\r\n);\r\n","import React from 'react';\r\nimport {useHistory, withRouter} from 'react-router-dom';\r\n\r\nimport HeaderComponent from '../components/Header';\r\n\r\nconst Header = () => {\r\n  const history = useHistory();\r\n  const gotoRoot = (e) => {\r\n    if(e) {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    }\r\n    history.push('/');\r\n  }\r\n\r\n  return <HeaderComponent gotoRoot={gotoRoot}/>;\r\n}\r\nexport default withRouter(Header);","export const EXPAND_CHILDREN = 'EXPAND_CHILDREN';\r\nexport const COLLAPSE_CHILDREN = 'COLLAPSE_CHILDREN';","import * as types from './types';\r\n\r\nexport function expandChildren(id) {\r\n    return {\r\n        type: types.EXPAND_CHILDREN,\r\n        payload: {id}\r\n    }\r\n}\r\n\r\nexport function collapseChildren(id) {\r\n    return {\r\n        type: types.COLLAPSE_CHILDREN,\r\n        payload: {id}\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './MenuNode.css';\r\n\r\nclass MenuNode extends React.Component {\r\n    shouldIExpand() {\r\n        return this.props.shouldExpandChildren(this.props.node)\r\n    }\r\n\r\n    renderSign() {\r\n        if(this.props.node.children) {\r\n            if(this.shouldIExpand()) {\r\n                return <i className=\"material-icons MenuNode-sing\"\r\n                onClick={this.props.onCollapseChildren.bind(null, this.props.node.id)}>arrow_drop_down</i>;\r\n            } else {\r\n                return <i className=\"material-icons MenuNode-sing\"\r\n                onClick={this.props.onExpandChildren.bind(null, this.props.node.id)}>arrow_right</i>;\r\n            }\r\n        }\r\n        return <i className='MenuNode-circle'/>\r\n    }\r\n\r\n    renderChilder(){\r\n        const parentNode = this.props.node;\r\n        const children = parentNode.children || [];\r\n        return children.map((node, i) => {\r\n            return <MenuNode node={node} hidden={!this.shouldIExpand()} key={i}\r\n                onExpandChildren={this.props.onExpandChildren}\r\n                onCollapseChildren={this.props.onCollapseChildren}\r\n                shouldExpandChildren={this.props.shouldExpandChildren}\r\n                isActive={this.props.isActive}\r\n                createUrl={this.props.createUrl}\r\n                />;\r\n        });\r\n    }\r\n\r\n\r\n    getStyles() {\r\n        return this.props.isActive(this.props.node)\r\n            ? 'MenuNode bordered MenuNode-active'\r\n            : 'MenuNode bordered';\r\n    }\r\n\r\n    render() {\r\n        if(this.props.hidden){\r\n            return <div/>;\r\n        }\r\n        \r\n        return (\r\n        <div className={this.getStyles()}>\r\n            {\r\n                this.renderSign()\r\n            }\r\n            <Link to={this.props.createUrl(this.props.node)} className=\"MenuNode-link\">{this.props.node.name}</Link>\r\n            {\r\n                this.renderChilder()\r\n            }\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default MenuNode;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {expandChildren, collapseChildren} from '../store/menu/actions'\r\nimport MenuNode from '../components/MenuNode';\r\n\r\nclass Menu extends React.Component {\r\n    callAction(action, id, e) {\r\n        if(e) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        }\r\n        this.props.dispatch(action(id));\r\n    }\r\n\r\n    shouldExpandChildren(node, e) {\r\n        return this.props.expand.includes(node.id);\r\n    }\r\n\r\n    isActive(node) {\r\n        return this.props.selectedNode && node.id === this.props.selectedNode.id;\r\n    }\r\n\r\n    createUrl(node) {\r\n        return `/db/${node.name}`;\r\n    }\r\n\r\n    render() {\r\n        const nodes = this.props.nodes;\r\n        console.log(this.props)\r\n        if(nodes) {\r\n            return (\r\n                <div>\r\n                    {\r\n                        nodes.map((node, i) => {\r\n                            return (<MenuNode node={node} key={i}\r\n                                onExpandChildren={this.callAction.bind(this, expandChildren)}\r\n                                onCollapseChildren={this.callAction.bind(this, collapseChildren)}\r\n                                shouldExpandChildren={this.shouldExpandChildren.bind(this)}\r\n                                isActive={this.isActive.bind(this)}\r\n                                createUrl={this.createUrl.bind(this)}\r\n                                />);\r\n                        })\r\n                    }\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        nodes: state.db.nodes,\r\n        selectedNode: state.db.selectedNode,\r\n        expand: state.menu.expand\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Menu);","import React from 'react';\r\nimport Menu from '../containers/Menu';\r\nimport './Sidebar.css'\r\n\r\nexport default () => (\r\n    <div className='Sidebar bordered'>\r\n        <Menu/>\r\n    </div>\r\n);\r\n","import React from 'react';\r\nimport './Panel.css'\r\n\r\nexport default () => {\r\n    return (\r\n        <div className='Panel bordered'>\r\n            <h2 className='Panel-title'>Polybase</h2>\r\n            <p className='Panel-paragraph'>\r\n                Polybase will help you to get general overview of vast amount of databases.\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './Panel.css'\r\nimport './ShowNodePanel.css'\r\nimport './ShowGroupPanel.css'\r\n\r\nclass ShowGroupPanel extends React.Component {\r\n    renderChildrenLinks(children) {\r\n        if(!children) {\r\n            return <div>No particular implementations yet.</div>;\r\n        }\r\n        return (\r\n            <div className='Panel-paragraph ShowNodePanel-visualbreak'>\r\n                <span>Implementations:</span>\r\n                {\r\n                    children.map((child, i) => {\r\n                        return <Link to={`/db/${child.name}`} key={i}\r\n                            className='ShowNodePanel-link'>{child.fullName}</Link>;\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const group = this.props.group;\r\n        return (\r\n            <div className='Panel bordered'>\r\n                <h2 className='Panel-title'>{group.fullName}</h2>\r\n                <p className='Panel-paragraph'>{group.summary}</p>\r\n                {this.renderChildrenLinks(group.children)}\r\n                <p className='Panel-paragraph'>{group.description}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default ShowGroupPanel;","import React from 'react';\r\nimport './Panel.css';\r\nimport './ShowNodePanel.css';\r\nimport './ShowDBPanel.css';\r\n\r\n\r\nexport default class ShowDBPanel extends React.Component {\r\n\r\n    renderTitileInfo(db) {\r\n        return (\r\n            <div className='ShowDBPanel-titleinfo'>\r\n                <div className='display-flex ShowDBPanel-upperleftdata'>\r\n                    <div className='vcenter'>\r\n                        <a className='ShowNodePanel-link ShowDBPanel-link' style={{display: 'block'}} href={db.docs}\r\n                            target='_blank' rel='noopener noreferrer'>Tech docs</a>\r\n                        <a className='ShowNodePanel-link ShowDBPanel-link' style={{display: 'block'}} href={db.website}\r\n                            target='_blank' rel='noopener noreferrer'>Website</a>\r\n                    </div>\r\n                    <div className='ShowDBPanel-opensource display-flex'>\r\n                        {this.renderOpenSource(db)}\r\n                    </div>\r\n                </div>\r\n                <p className='ShowNodePanel-summary'>\r\n                    {db.summary}\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderGenInfo(db) {\r\n        return (\r\n            <div>\r\n                <p className='ShowDBPanel-geninfo-block Panel-paragraph'>\r\n                    {db.name} is <span className='ShowDBPanel-txtfeat'>{db.dataModel}</span> database\r\n                    with <span className='ShowDBPanel-txtfeat'>{db.transaction} transaction</span> model\r\n                    and <span className='ShowDBPanel-txtfeat'>{db.consistency} consistency</span> principle for distributed\r\n                    envs. {this.render2ndDataModel(db)}\r\n                </p>\r\n                <p className='ShowDBPanel-geninfo-block Panel-paragraph'>\r\n                    {db.fullName} provides <code className='ShowDBPanel-txtfeat'>{db.partitionin} partitioning\r\n                    </code>, <code className='ShowDBPanel-txtfeat'>{db.replication} replication</code> and it lays on <span\r\n                    className='ShowDBPanel-txtfeat'>{db.cap} vertex</span> according to CAP theorem. Database comes\r\n                    with <span className='ShowDBPanel-txtfeat'>{db.persistance} persistance</span> algorithm.\r\n                </p>\r\n                <p className='ShowDBPanel-geninfo-block Panel-paragraph'>\r\n                    {db.openSource ? 'Open-Source' : 'Commertial'} software protects\r\n                    by <span className='ShowDBPanel-txtfeat'>{db.license}</span> license(s).\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderKeyFeats(db) {\r\n        return (\r\n            // <p className='ShowNodePanel-visualbreak Panel-paragraph'>Key feaures: { db.features.join(', ') }.</p>\r\n            <p className='ShowNodePanel-visualbreak Panel-paragraph'>Key feaures: <span className='ShowDBPanel-txtfeat'>{ db.features.join(', ') }</span>.</p>\r\n        );\r\n    }\r\n\r\n    render2ndDataModel(db) {\r\n        if(db.secondaryDataModel) {\r\n            return (<span>\r\n                Additionally, it has <span className='ShowDBPanel-txtfeat'>{db.secondaryDataModel}</span> features.\r\n            </span>);\r\n        }\r\n    }\r\n\r\n    renderOpenSource(db) {\r\n        if(db.openSource) {\r\n            return (\r\n                <p>\r\n                    <i className=\"material-icons\" style={{color: 'green'}}>done</i>\r\n                    Open-Source\r\n                </p>\r\n            );\r\n        } else {\r\n            return (\r\n                <p>\r\n                    <i className=\"material-icons ShowDBPanel-no\" style={{color: 'red'}}>cancel</i>\r\n                    Proprietary\r\n                </p>\r\n            );\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        const db = this.props.db;\r\n        return (\r\n            <div className='Panel bordered'>\r\n                <h2 className='Panel-title'>{db.fullName}</h2>\r\n                { this.renderTitileInfo(db) }\r\n                { this.renderGenInfo(db) }\r\n                { this.renderKeyFeats(db) }\r\n                <p className='Panel-paragraph'>Thus, {db.description}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export const NODE_SELECTED = 'NODE_SELECTED';","import React from 'react';\r\nimport './Panel.css'\r\n\r\nexport default () => {\r\n    return (\r\n        <div className='Panel bordered'>\r\n            <h2 className='Panel-title'>Woops</h2>\r\n            <p className='Panel-paragraph'>Looks like we can't find database you looking for =c</p>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter} from 'react-router';\r\nimport ShowGroupPanel from '../components/ShowGroupPanel';\r\nimport ShowDBPanel from '../components/ShowDBPanel';\r\nimport {selectGroupByName} from '../store/db/actions';\r\nimport NotFoundPane from '../components/NotFoundPane';\r\n\r\nclass ShowNodePanel extends React.Component {\r\n    dispatchIfRequired() {\r\n        const node = this.props.node;\r\n        const urlName = this.props.match.params.nodeName;\r\n\r\n        if(!node || urlName !== node.name) {\r\n            this.props.dispatch(selectGroupByName(urlName));\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        this.dispatchIfRequired();\r\n\r\n        const node = this.props.node;\r\n        if(node) {\r\n            return node.database \r\n                ? <ShowDBPanel db={node}/>\r\n                : <ShowGroupPanel group={node}/>\r\n        } else {\r\n            return <NotFoundPane/>;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        node: state.db.selectedNode\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(ShowNodePanel));","import * as types from './types';\r\n\r\nexport function selectGroupById(id) {\r\n    return {\r\n        type: types.NODE_SELECTED,\r\n        payload: {id}\r\n    };\r\n}\r\n\r\nexport function selectGroupByName(name) {\r\n    return {\r\n        type: types.NODE_SELECTED,\r\n        payload: {name}\r\n    };\r\n}\r\n","import React from 'react';\r\nimport {Switch, Route} from 'react-router-dom';\r\nimport DefaultPanel from '../components/DefaultPanel';\r\nimport ShowNodePanel from './ShowNodePanel';\r\n\r\n\r\nexport default () => (\r\n    <Switch>\r\n        <Route path='/db/:nodeName' component={ShowNodePanel}/>\r\n        <Route path='/' component={DefaultPanel}/>\r\n    </Switch>\r\n);\r\n","import React from 'react';\r\nimport './Footer.css'\r\n\r\nexport default () => (\r\n  <div className='Footer bordered'>\r\n    <span>Have you noticed an issue? Let me know\r\n      </span> <a href='https://github.com/DzianisH/polybase/issues/new' target='_blank' rel='noopener noreferrer'\r\n      className='Footer-link'>Here</a>\r\n  </div>\r\n);\r\n","import React from 'react';\nimport Header from './containers/Header';\nimport Sidebar from './components/Sidebar';\nimport './App.css'\nimport Panel from './containers/Panel';\nimport Footer from './components/Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <div className=\"display-flex\">\n        <Sidebar/>\n        <Panel/>\n      </div>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\r\nexport const logState = (newState, actionType) => {\r\n  const msg = actionType\r\n    ? 'after ' + actionType\r\n    : undefined;\r\n    \r\n  console.log(newState, msg);\r\n  return newState;\r\n}\r\n","import * as types from './types';\r\nimport {logState} from '../utils';\r\n\r\nconst initialState = readInitalState();\r\n\r\nexport default function (state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case types.NODE_SELECTED:\r\n      return logState(selectNode(state, action.payload), action.type);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst selectNode = (state, selector) => {\r\n  const node = findNode(state.nodes, createComparator(selector));\r\n\r\n  return Object.freeze({\r\n    ...state,\r\n    selectedNode: node\r\n  });\r\n}\r\n\r\nconst createComparator = selector => {\r\n  const {id, name} = selector;\r\n\r\n  return id \r\n    ? node => node.id === id\r\n    : node => node.name === name;\r\n\r\n}\r\n\r\nconst findNode = (nodes = [], comparator) => {\r\n  for(const node of nodes) {\r\n    if(comparator(node)) {\r\n      return node;\r\n    }\r\n    const innerNode = findNode(node.children, comparator);\r\n    if(innerNode) {\r\n      return innerNode;\r\n    }\r\n  }\r\n  return undefined;\r\n};\r\n\r\nfunction readInitalState() {\r\n  const state = require('./initialState');\r\n  populateIds(state.nodes);\r\n  return Object.freeze(state);\r\n}\r\n\r\nfunction populateIds(nodes = [], firstId = 0) {\r\n  let id = firstId;\r\n  for(const node of nodes) {\r\n    node.id = id++;\r\n    if(!node.fullName) {\r\n      node.fullName = node.name;\r\n    }\r\n\r\n    id = populateIds(node.children, id);\r\n  }\r\n  return id;\r\n}","import * as types from './types';\r\nimport {logState} from '../utils';\r\n\r\nexport default function (state = {expand: []}, action = {}) {\r\n  switch (action.type) {\r\n    case types.EXPAND_CHILDREN:\r\n      return logState(expandChildren(state, action.payload.id), action.type);\r\n    case types.COLLAPSE_CHILDREN:\r\n      return logState(collapseChildren(state, action.payload.id), action.type);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst expandChildren = (state, id) => {\r\n  const expand = state.expand\r\n    ? state.expand.concat([id])\r\n    : [id];  \r\n  return {...state, expand};\r\n}\r\n\r\nconst collapseChildren = (state, id) => {\r\n  const expand = state.expand\r\n    ? state.expand.filter(eId => eId !== id)\r\n    : [];\r\n  return {...state, expand};\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, combineReducers } from 'redux';\nimport {Provider} from 'react-redux';\nimport {HashRouter as Router} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport dbReducer from './store/db/reducer';\nimport menuReducer from './store/menu/reducer';\n\nconst reducer = combineReducers({\n    db: dbReducer,\n    menu: menuReducer\n});\nconst store = createStore(reducer);\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <App/>\n        </Router>\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}